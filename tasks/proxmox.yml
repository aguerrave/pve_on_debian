---

- name: set hostname for the system
  hostname: name="{{ proxmox_hostname_fdqn }}"

- name: refresh facts because hostname has been changed
  setup:
      
- name: modify /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ proxmox_ip }} {{ ansible_hostname }} {{ ansible_fqdn }} pvelocalhost"

- name: check standart repos
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb http://security.debian.org/ {{debian_version}}/updates main contrib non-free"
    - "deb-src http://security.debian.org/ {{debian_version}}/updates main contrib non-free"
    - "deb {{ debian_repo }} {{debian_version}} main contrib non-free"
    - "deb-src {{ debian_repo }} {{debian_version}} main contrib non-free"
    - "deb {{ debian_repo }} {{debian_version}}-updates main contrib non-free"
    - "deb-src {{ debian_repo }} {{debian_version}}-updates main contrib non-free"

- name: add pve repository key
  apt_key:
    url: "{{ pve_repo_keyurl }}"
    keyring: "{{ pve_repo_keyring }}"
    state: present
            
- name: add pve-no-subscription repo
  apt_repository:
    repo: "deb http://download.proxmox.com/debian/pve {{debian_version}} pve-no-subscription"
    state: present
    filename: 'pve-install-repo'
  when: add_pve_no_subscription

- name: update system
  apt:
    upgrade: dist
    update_cache: yes

- name: install proxmox packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: no
    autoclean: yes
  with_items:
    - proxmox-ve
    - postfix
    - bridge-utils
    
- name: remove os prober to prevent injuring VMs 
  apt: 
    name: "{{ item }}"
    state: absent
  with_items:
    - "os-prober"

- name: search for standard kernels
  shell: "$( which dpkg ) --get-selections linux-image* | $( which grep ) -i install | $(which awk) '{print $1}'"
  args:
    executable: /bin/bash
  register: standart_kernels_installed

- name: remove standart kernels
  apt:
    name: "{{ item }}"
    state: absent
  with_items: "{{ standart_kernels_installed.stdout_lines|default([]) }}"

- name: configure network from template
  template:
    backup: yes
    src: templates/interfaces.j2
    dest: "/etc/network/interfaces"
    owner: root 
    group: root
    mode: 0644
  notify:
    - restart networking

- name: rebooting the server
  shell: nohup bash -c "sleep 2s && reboot" &
  async: 0
  poll: 0
  ignore_errors: yes
  register: reboot
  tags: reboot

- name: waiting for server to come back
  local_action: wait_for host={{ proxmox_ip }} state=started
  when: reboot.changed
  async: 2400
  poll: 10
  tags: reboot

- name: remove enterprise repo
  apt_repository:
    repo: "deb https://enterprise.proxmox.com/debian/pve {{debian_version}} pve-enterprise"
    state: absent
    filename: 'pve-enterprise'
  when: disable_pve_enterprise
...
